@model CharacterSheet.Areas.Account.ViewModels.ResetPasswordVM
@{ ViewBag.Title = "Reset Password"; }

<div id="Account" class="container">
    <div class="row">
        <div class="login-form col-xs-12 col-sm-6 col-md-6 col-lg-6">
            <div class="header">
                <h4>Reset Password</h4>
            </div>
            @using (Html.BeginForm("ResetPassword", "ForgotPassword", FormMethod.Post)) {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.Code)
                @Html.HiddenFor(model => model.Email)
                <div class="form-group">
                    <div class="control-label"><span class="fa fa-envelope"></span></div>
                    <div class="form-control">@Model.Email</div>
                </div>
                <div class="form-group">
                    <div class="control-label"><span class="fa fa-key"></span></div>
                    <div class="form-control">
                        @Html.PasswordFor(m => m.Password, new { tabIndex = 1, autoFocus = true })
                        @Html.ValidationMessageFor(m => m.Password)
                    </div>
                </div>
                <div class="form-group">
                    <div class="control-label"><span class="fa fa-key"></span></div>
                    <div class="form-control">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { tabIndex = 2 })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                    </div>
                </div>
                <input class="submit-btn" type="submit" name="submit" value="Reset Password" tabindex="3">
            }
        </div>
    </div>
</div>

@section scripts {
<script src="~/jspm_packages/github/jzaefferer/jquery-validation@1.13.1/dist/jquery.validate.min.js"></script>
<script src="~/js/jquery.validation.complexPassword.js"></script>
<script>
    $("#Account form").validate({
        rules: {
            Password: {
                required: true,
                minlength: 6,
                maxlength: 128,
                complexPassword: true
            },
            ConfirmPassword: {
                required: true,
                minlength: 6,
                maxlength: 128,
                equalTo: "#regPasswordField"
            }
        }
    });
</script>
}
